security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        # Toutes les méthodes différentes permettant à l'utilisateur de se connecter au site.
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            #Donne la possibilité d'essayer de se connecter 3 fois par minute avant d'etre bloqué pendant 1min.
            login_throttling :
                max_attempts : 3
            logout:
                path: app_logout
                # where to redirect after logout
                target: serie_list

            remember_me:
                secret: '%kernel.secret%'
                # durée de vie du cookie Remember Me (en sec)
                lifetime: 604800
                path: /
                always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path : ^/serie/(list|\d+), roles : PUBLIC_ACCESS} # Accès public, donc tout le monde peut y aller. (list|\d+) --> accessible soit à serie/list ou serie/id
         - { path: ^/serie, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
    role_hierarchy :
        #Role_enfant : Role_parent
        ROLE_ADMIN : ROLE_USER #L'admin a les mêmes droits que le User// Ce n'est pas parce qu'on est Admin, qu'on a le droits d'accéder partout (pages user confidentielles, données privées, etc...)

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
